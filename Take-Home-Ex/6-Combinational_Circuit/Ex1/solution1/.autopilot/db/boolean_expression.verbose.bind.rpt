

================================================================
== Vitis HLS Report for 'boolean_expression'
================================================================
* Date:           Wed Jul 24 21:58:41 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        Ex1
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  0.148 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    1|    1|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.14>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%spectopmodule_ln1 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_2" [Ex1/src/boolean_expression.cpp:1]   --->   Operation 2 'spectopmodule' 'spectopmodule_ln1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%specinterface_ln1 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0" [Ex1/src/boolean_expression.cpp:1]   --->   Operation 3 'specinterface' 'specinterface_ln1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %a"   --->   Operation 4 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %a, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 5 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %b"   --->   Operation 6 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %b, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 7 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %c"   --->   Operation 8 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %c, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %e"   --->   Operation 10 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %e, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 11 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %g"   --->   Operation 12 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %g, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %f"   --->   Operation 14 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %f, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %h"   --->   Operation 16 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %h, void @empty_1, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 17 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%f_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %f" [Ex1/src/boolean_expression.cpp:1]   --->   Operation 18 'read' 'f_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%g_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %g" [Ex1/src/boolean_expression.cpp:1]   --->   Operation 19 'read' 'g_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%e_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %e" [Ex1/src/boolean_expression.cpp:1]   --->   Operation 20 'read' 'e_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%c_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %c" [Ex1/src/boolean_expression.cpp:1]   --->   Operation 21 'read' 'c_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%b_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %b" [Ex1/src/boolean_expression.cpp:1]   --->   Operation 22 'read' 'b_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%a_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %a" [Ex1/src/boolean_expression.cpp:1]   --->   Operation 23 'read' 'a_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node or_ln20_1)   --->   "%and_ln20 = and i1 %b_read, i1 %c_read" [Ex1/src/boolean_expression.cpp:20]   --->   Operation 24 'and' 'and_ln20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node or_ln20_1)   --->   "%and_ln20_1 = and i1 %f_read, i1 %g_read" [Ex1/src/boolean_expression.cpp:20]   --->   Operation 25 'and' 'and_ln20_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node or_ln20_1)   --->   "%or_ln20 = or i1 %and_ln20_1, i1 %e_read" [Ex1/src/boolean_expression.cpp:20]   --->   Operation 26 'or' 'or_ln20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node or_ln20_1)   --->   "%xor_ln20 = xor i1 %and_ln20, i1 %or_ln20" [Ex1/src/boolean_expression.cpp:20]   --->   Operation 27 'xor' 'xor_ln20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.14ns) (out node of the LUT)   --->   "%or_ln20_1 = or i1 %xor_ln20, i1 %a_read" [Ex1/src/boolean_expression.cpp:20]   --->   Operation 28 'or' 'or_ln20_1' <Predicate = true> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%write_ln20 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %h, i1 %or_ln20_1" [Ex1/src/boolean_expression.cpp:20]   --->   Operation 29 'write' 'write_ln20' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%ret_ln21 = ret" [Ex1/src/boolean_expression.cpp:21]   --->   Operation 30 'ret' 'ret_ln21' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 1
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_none:ce=0
Port [ a]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ b]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ c]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ e]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ g]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ f]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ h]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_vld:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
spectopmodule_ln1 (spectopmodule) [ 00]
specinterface_ln1 (specinterface) [ 00]
specbitsmap_ln0   (specbitsmap  ) [ 00]
specinterface_ln0 (specinterface) [ 00]
specbitsmap_ln0   (specbitsmap  ) [ 00]
specinterface_ln0 (specinterface) [ 00]
specbitsmap_ln0   (specbitsmap  ) [ 00]
specinterface_ln0 (specinterface) [ 00]
specbitsmap_ln0   (specbitsmap  ) [ 00]
specinterface_ln0 (specinterface) [ 00]
specbitsmap_ln0   (specbitsmap  ) [ 00]
specinterface_ln0 (specinterface) [ 00]
specbitsmap_ln0   (specbitsmap  ) [ 00]
specinterface_ln0 (specinterface) [ 00]
specbitsmap_ln0   (specbitsmap  ) [ 00]
specinterface_ln0 (specinterface) [ 00]
f_read            (read         ) [ 00]
g_read            (read         ) [ 00]
e_read            (read         ) [ 00]
c_read            (read         ) [ 00]
b_read            (read         ) [ 00]
a_read            (read         ) [ 00]
and_ln20          (and          ) [ 00]
and_ln20_1        (and          ) [ 00]
or_ln20           (or           ) [ 00]
xor_ln20          (xor          ) [ 00]
or_ln20_1         (or           ) [ 00]
write_ln20        (write        ) [ 00]
ret_ln21          (ret          ) [ 00]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="a">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="a"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="b">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="b"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="c">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="c"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="e">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="e"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="g">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="g"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="f">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="f"/></StgValue>
</bind>
</comp>

<comp id="12" class="1000" name="h">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="h"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_2"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_3"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_0"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_1"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_none.i1"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.ap_auto.i1P0A"/></StgValue>
</bind>
</comp>

<comp id="38" class="1004" name="f_read_read_fu_38">
<pin_list>
<pin id="39" dir="0" index="0" bw="1" slack="0"/>
<pin id="40" dir="0" index="1" bw="1" slack="0"/>
<pin id="41" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="f_read/1 "/>
</bind>
</comp>

<comp id="44" class="1004" name="g_read_read_fu_44">
<pin_list>
<pin id="45" dir="0" index="0" bw="1" slack="0"/>
<pin id="46" dir="0" index="1" bw="1" slack="0"/>
<pin id="47" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="g_read/1 "/>
</bind>
</comp>

<comp id="50" class="1004" name="e_read_read_fu_50">
<pin_list>
<pin id="51" dir="0" index="0" bw="1" slack="0"/>
<pin id="52" dir="0" index="1" bw="1" slack="0"/>
<pin id="53" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="e_read/1 "/>
</bind>
</comp>

<comp id="56" class="1004" name="c_read_read_fu_56">
<pin_list>
<pin id="57" dir="0" index="0" bw="1" slack="0"/>
<pin id="58" dir="0" index="1" bw="1" slack="0"/>
<pin id="59" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="c_read/1 "/>
</bind>
</comp>

<comp id="62" class="1004" name="b_read_read_fu_62">
<pin_list>
<pin id="63" dir="0" index="0" bw="1" slack="0"/>
<pin id="64" dir="0" index="1" bw="1" slack="0"/>
<pin id="65" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="b_read/1 "/>
</bind>
</comp>

<comp id="68" class="1004" name="a_read_read_fu_68">
<pin_list>
<pin id="69" dir="0" index="0" bw="1" slack="0"/>
<pin id="70" dir="0" index="1" bw="1" slack="0"/>
<pin id="71" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="a_read/1 "/>
</bind>
</comp>

<comp id="74" class="1004" name="write_ln20_write_fu_74">
<pin_list>
<pin id="75" dir="0" index="0" bw="0" slack="0"/>
<pin id="76" dir="0" index="1" bw="1" slack="0"/>
<pin id="77" dir="0" index="2" bw="1" slack="0"/>
<pin id="78" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln20/1 "/>
</bind>
</comp>

<comp id="81" class="1004" name="and_ln20_fu_81">
<pin_list>
<pin id="82" dir="0" index="0" bw="1" slack="0"/>
<pin id="83" dir="0" index="1" bw="1" slack="0"/>
<pin id="84" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln20/1 "/>
</bind>
</comp>

<comp id="87" class="1004" name="and_ln20_1_fu_87">
<pin_list>
<pin id="88" dir="0" index="0" bw="1" slack="0"/>
<pin id="89" dir="0" index="1" bw="1" slack="0"/>
<pin id="90" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln20_1/1 "/>
</bind>
</comp>

<comp id="93" class="1004" name="or_ln20_fu_93">
<pin_list>
<pin id="94" dir="0" index="0" bw="1" slack="0"/>
<pin id="95" dir="0" index="1" bw="1" slack="0"/>
<pin id="96" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln20/1 "/>
</bind>
</comp>

<comp id="99" class="1004" name="xor_ln20_fu_99">
<pin_list>
<pin id="100" dir="0" index="0" bw="1" slack="0"/>
<pin id="101" dir="0" index="1" bw="1" slack="0"/>
<pin id="102" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln20/1 "/>
</bind>
</comp>

<comp id="105" class="1004" name="or_ln20_1_fu_105">
<pin_list>
<pin id="106" dir="0" index="0" bw="1" slack="0"/>
<pin id="107" dir="0" index="1" bw="1" slack="0"/>
<pin id="108" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln20_1/1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="42"><net_src comp="34" pin="0"/><net_sink comp="38" pin=0"/></net>

<net id="43"><net_src comp="10" pin="0"/><net_sink comp="38" pin=1"/></net>

<net id="48"><net_src comp="34" pin="0"/><net_sink comp="44" pin=0"/></net>

<net id="49"><net_src comp="8" pin="0"/><net_sink comp="44" pin=1"/></net>

<net id="54"><net_src comp="34" pin="0"/><net_sink comp="50" pin=0"/></net>

<net id="55"><net_src comp="6" pin="0"/><net_sink comp="50" pin=1"/></net>

<net id="60"><net_src comp="34" pin="0"/><net_sink comp="56" pin=0"/></net>

<net id="61"><net_src comp="4" pin="0"/><net_sink comp="56" pin=1"/></net>

<net id="66"><net_src comp="34" pin="0"/><net_sink comp="62" pin=0"/></net>

<net id="67"><net_src comp="2" pin="0"/><net_sink comp="62" pin=1"/></net>

<net id="72"><net_src comp="34" pin="0"/><net_sink comp="68" pin=0"/></net>

<net id="73"><net_src comp="0" pin="0"/><net_sink comp="68" pin=1"/></net>

<net id="79"><net_src comp="36" pin="0"/><net_sink comp="74" pin=0"/></net>

<net id="80"><net_src comp="12" pin="0"/><net_sink comp="74" pin=1"/></net>

<net id="85"><net_src comp="62" pin="2"/><net_sink comp="81" pin=0"/></net>

<net id="86"><net_src comp="56" pin="2"/><net_sink comp="81" pin=1"/></net>

<net id="91"><net_src comp="38" pin="2"/><net_sink comp="87" pin=0"/></net>

<net id="92"><net_src comp="44" pin="2"/><net_sink comp="87" pin=1"/></net>

<net id="97"><net_src comp="87" pin="2"/><net_sink comp="93" pin=0"/></net>

<net id="98"><net_src comp="50" pin="2"/><net_sink comp="93" pin=1"/></net>

<net id="103"><net_src comp="81" pin="2"/><net_sink comp="99" pin=0"/></net>

<net id="104"><net_src comp="93" pin="2"/><net_sink comp="99" pin=1"/></net>

<net id="109"><net_src comp="99" pin="2"/><net_sink comp="105" pin=0"/></net>

<net id="110"><net_src comp="68" pin="2"/><net_sink comp="105" pin=1"/></net>

<net id="111"><net_src comp="105" pin="2"/><net_sink comp="74" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: h | {1 }
 - Input state : 
	Port: boolean_expression : a | {1 }
	Port: boolean_expression : b | {1 }
	Port: boolean_expression : c | {1 }
	Port: boolean_expression : e | {1 }
	Port: boolean_expression : g | {1 }
	Port: boolean_expression : f | {1 }
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|------------------------|---------|---------|
| Operation|     Functional Unit    |    FF   |   LUT   |
|----------|------------------------|---------|---------|
|    and   |     and_ln20_fu_81     |    0    |    2    |
|          |    and_ln20_1_fu_87    |    0    |    2    |
|----------|------------------------|---------|---------|
|    or    |      or_ln20_fu_93     |    0    |    2    |
|          |    or_ln20_1_fu_105    |    0    |    2    |
|----------|------------------------|---------|---------|
|    xor   |     xor_ln20_fu_99     |    0    |    2    |
|----------|------------------------|---------|---------|
|          |    f_read_read_fu_38   |    0    |    0    |
|          |    g_read_read_fu_44   |    0    |    0    |
|   read   |    e_read_read_fu_50   |    0    |    0    |
|          |    c_read_read_fu_56   |    0    |    0    |
|          |    b_read_read_fu_62   |    0    |    0    |
|          |    a_read_read_fu_68   |    0    |    0    |
|----------|------------------------|---------|---------|
|   write  | write_ln20_write_fu_74 |    0    |    0    |
|----------|------------------------|---------|---------|
|   Total  |                        |    0    |    10   |
|----------|------------------------|---------|---------|

Memories:
N/A

* Register list:
N/A

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+
|           |   FF   |   LUT  |
+-----------+--------+--------+
|  Function |    0   |   10   |
|   Memory  |    -   |    -   |
|Multiplexer|    -   |    -   |
|  Register |    -   |    -   |
+-----------+--------+--------+
|   Total   |    0   |   10   |
+-----------+--------+--------+
